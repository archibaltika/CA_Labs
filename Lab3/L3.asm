TITLE Lab-3
;------------------------------------------------------------------------------
;ЛР  №3
;------------------------------------------------------------------------------
; Архітектура комп'ютера.
; Завдання:     Основи розробки і налагодження
; ВУЗ:          НТУУ "КПІ"
; Факультет:    ФІОТ
; Курс:         1
; Група:        ІТ-01
;------------------------------------------------------------------------------
; Автор:        Bardin Vladislav,
;				Zadniprianets Artur,
;				Kurkin Oleksii
; Дата:         23/02/2021
;----------------------------I.ЗАГОЛОВОК ПРОГРАМИ------------------------------
IDEAL
MODEL SMALL
STACK 512
;-------------------------------II.МАКРОСИ-------------------------------------
                    ; Макрос для ініціалізації
MACRO M_Init		; Початок макросу 
    mov     ax,@data
    mov     ds,ax   ; ds = data segment
    mov     ax,0B800h
    mov     es,ax   ; es = text VRAM segment for direct VRAM writes
ENDM M_Init			; Кінець макросу

;----------------------III.ПОЧАТОК СЕГМЕНТУ ДАНИХ------------------------------
DATASEG

; масив, який буде записано в пам'ять, а потім з неї надруковано
matrix db 42h, 42h, 42h, 42h, 42h, 42h, 42h, 42h, 42h, 42h, 42h, 42h, 42h, 42h, 42h, 42h
       db 42h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 'V', 42h
       db 42h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 'A', 20h, 42h
       db 42h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 'O', 20h, 20h, 42h
       db 42h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 42h
       db 42h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 42h
       db 42h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 42h
       db 42h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 42h
       db 42h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 42h
       db 42h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 42h
       db 42h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 42h
       db 42h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 42h
       db 42h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 42h
       db 42h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 42h
       db 42h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 42h
       db 42h, 42h, 42h, 42h, 42h, 42h, 42h, 42h, 42h, 42h, 42h, 42h, 42h, 42h, 42h, 42h

BOARD_SIZE_X    EQU     16          ; Розмір масиву по осі Ох
BOARD_SIZE_Y    EQU     16          ; Розмір масиву по осі Оу
START_X         EQU     2           ; Координата Х верхнього лівого кута матриці
START_Y         EQU     2           ; Координата У верхнього лівого кута матриці
       
;-----------------------VI. ПОЧАТОК СЕГМЕНТУ КОДУ-------------------------------
CODESEG

Start:	
    M_Init

    mov ah, [matrix]                ; Запис масиву у старші біти регістру ah

    call    clear_screen            ; Виклик процедури, яка зафарбує екран у зелений колір
    call    draw_board              ; Виклик процедури, яка намалює екран 

    xor     ah,ah                   ; Очищуємо регістр ah і очікуємо натискання клавіші для того, щоб продовжити виконання роботи
    int     16h    

    mov     ax,4C00h                ; Завершуемо программу
    int     21h


;-------------------------------------Очистка екрану від зайвого тексту-------------------------------------         
; Вхідні  параметри - немає
; Вихідні параметри - немає
;----------------------------------------------------------------------------------------------------------- 
    PROC clear_screen
        xor     di,di                ; Очищення di, перехід до адреси B800:0000
        mov     ax, ' ' + 2Fh*256    ; Заповнення екрана пробілами на зеленому фоні 
        mov     cx,80*25             ; Кіл-сть символів, яку нам потрібно замалювати (cols * rows). DOSBox width 80 cols and height 25 rows 
        rep stosw                    ; Заповнення di <- ax, доки сx > 0 
        ret
    ENDP

;--------------------------------------------Друк масиву на екран-------------------------------------------         
; Вхідні  параметри - немає
; Вихідні параметри - немає
;----------------------------------------------------------------------------------------------------------- 
    PROC draw_board
        mov     si,offset matrix     ; Встановлюємо у регістр si посилання на перший елемент масиву 
                                    
        ; Зміщення точки друку за формулою (80 * y + x) * 2
        ; 2 bytes per char (char+color), 80 chars (160B) per line
        mov     di,(START_Y*80 + START_X)*2
        ; Друк BOARD_SIZE_Y рядків
        mov     dx,BOARD_SIZE_Y
    board_line_loop:
        ; Друк BOARD_SIZE_X символів
        mov     cx,BOARD_SIZE_X
    board_char_loop:
        lodsb           ; Переміщення в регістрі si + 1
        stosw           ; Запис символа + його кольору до відеопам'яті es:di, переміщення di +2
        dec     cx
        jnz     board_char_loop ; Ітерація по кожному символу, який потрібно надрукувати
        ; Перенесення вказівника відеопам'яті в початок наступного рядка
        add     di,(80-BOARD_SIZE_X)*2  ; Доповнення символами, щоб перейти на наступний рядок
        dec     dx
        jnz     board_line_loop ; Прохід по кожному рядку, який необхідно намалювати 
        ret
    ENDP   
end Start